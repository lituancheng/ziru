<?xml version="1.0" encoding="UTF-8"?>
<!-- log4j2 配置加载顺序:
	1.	环境变量 log4j.configurationFile, 读取对应配置文件，并根据后缀加载
	以下都在classpath寻找:
	2.	log4j2-test.properties
	3.	log4j2-test.yaml or log4j2-test.yml
	4.	log4j2-test.json or log4j2-test.jsn
	5.	log4j2-test.xml

	6.	log4j2.properties
	7.	log4j2.yaml or log4j2.yml
	8.	log4j2.json or log4j2.jsn
	9.	log4j2.xml

	10.	默认的DefaultConfiguration
-->

<!--
	log4j2.xml是生产环境的配置
	项目线下测试或者自己debug可以加载自己的test配置，
	test配置会优先log4j2.xml加载
	test配置不应当提交到git
-->

<!-- 以下是白猫贷当前的最简配置 -->

<!-- status，用于设置看log4j2内部的输出， 可不写-->
<!-- monitorInterval, 自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<Configuration status="TRACE">
    <Properties>
        <Property name="LOG_ROOT">logs</Property>
        <Property name="BACKUP_FOLDER">${LOG_ROOT}/bak</Property>
        <Property name="logFormat">%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %C{1.} - %msg%n</Property>
        <Property name="errFormat">%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %C{1.} - %msg%n %ex%n</Property>
    </Properties>
    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="${logFormat}"/>
        </Console>
        <!-- 按天分日志，归档到backuo_folder -->
        <!-- immediateFlush, true,无buffer  false,有buffer,可配置大小bufferSize, 默认8192bytes -->
        <RollingFile name="reqLog" fileName="${LOG_ROOT}/req.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/req.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
        <RollingFile name="errorLog" fileName="${LOG_ROOT}/error.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/error.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${errFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
        <RollingFile name="infoLog" fileName="${LOG_ROOT}/info.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/info.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>
        <RollingFile name="statusLog" fileName="${LOG_ROOT}/status.log" immediateFlush = "true">
            <FilePattern>${BACKUP_FOLDER}/status.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>

        <RollingFile name="debugLog" fileName="${LOG_ROOT}/debug.log" >
            <FilePattern>${BACKUP_FOLDER}/debug.log.%d{yyyy-MM-dd}.gz</FilePattern>
            <PatternLayout pattern="${logFormat}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
        </RollingFile>

        <SMTP name="Mail" subject="自如抢房 - 报警通知" to="1274442622@qq.com" from="lituancheng@126.com"
              smtpHost="smtp.126.com" smtpUsername="lituancheng@126.com" smtpPassword="li64580753" bufferSize="50" >
        </SMTP>
        <Async name="AsyncError">
            <AppenderRef ref="errorLog"/>
            <AppenderRef ref="Mail"/>
        </Async>
    </Appenders>
    <Loggers>
        <logger name="reqLogger" level="info" additivity="false">
            <AppenderRef ref="reqLog"/>
        </logger>
        <logger name="errorLogger" level="error" additivity="false">
            <AppenderRef ref="errorLog"/>
            <AppenderRef ref="AsyncError"/>
        </logger>
        <logger name="infoLogger" level="info" additivity="false">
            <AppenderRef ref="infoLog"/>
        </logger>
        <logger name="debugLogger" level="debug" additivity="false">
            <AppenderRef ref="debugLog"/>
        </logger>
        <logger name="statusLogger" level="trace" additivity="false">
            <AppenderRef ref="statusLog"/>
        </logger>
        <Root level="info">
            <AppenderRef ref="messLog"/>
        </Root>
    </Loggers>
</Configuration>